generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  image        String?
  role         Role     @default(USER)
  active       Boolean  @default(true)
  accessStart  DateTime @default(now())
  accessEnd    DateTime @default(dbgenerated("now() + interval '30 days'"))
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Document {
  id            String      @id @default(cuid())
  originalName  String
  fileName      String      @unique
  contentType   String
  fileSize      Int
  uploadedBy    String
  accessLevel   AccessLevel @default(ADMIN_ONLY)

  // File content stored in database
  fileContent   Bytes?
  extractedText String?
  redactedText  String?

  // NEW FIXED FIELDS
  court         String?     // المحكمة
  plaintiff     String?     // المدعي
  judgmentFor   String?     // الحكم_لصالح
  mainTitle     String?     // العنوان_الرئيسي
  subTitle      String?     // العنوان_الفرعي
  summary       String?     // ملخص (full summary)
  caseDate      DateTime?   // تاريخ_الدعوى
  
  keywords      String[]
  
  encrypted     Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  searchLogs    SearchLog[]

  @@map("documents")
}

model SearchLog {
  id         String   @id @default(cuid())
  userId     String
  query      String
  documentId String?
  action     String
  results    Int?
  createdAt  DateTime @default(now())

  document   Document? @relation(fields: [documentId], references: [id])

  @@map("search_logs")
}

enum Role {
  USER
  ADMIN
}

enum AccessLevel {
  PUBLIC
  USER_ONLY
  ADMIN_ONLY
}
